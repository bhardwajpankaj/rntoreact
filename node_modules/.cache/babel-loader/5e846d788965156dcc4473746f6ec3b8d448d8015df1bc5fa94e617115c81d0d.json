{"ast":null,"code":"import'./App.css';import React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[reactNativeCode,setReactNativeCode]=useState('');const[reactJsCode,setReactJsCode]=useState('');const[cssCode,setCssCode]=useState('');const handleConvert=()=>{let convertedCode=reactNativeCode;let convertedCss='';convertedCode=convertedCode.replace(/import {[^}]+} from 'react-native';/g,'');// Ensure the import React statement is added once at the beginning\nif(!convertedCode.includes(\"import React from 'react';\")){convertedCode=\"import React from 'react';\\n\"+convertedCode;}// Replace React Native components with their React.js equivalents\nconvertedCode=convertedCode.replace(/View/g,'div').replace(/Text/g,'p').replace(/TouchableOpacity/g,'button').replace(/StyleSheet.create\\({(.*?)}\\)/gs,'');// Extract and convert the styles to CSS\nconst styleRegex=/const styles = StyleSheet.create\\(({[\\s\\S]*?})\\);/g;const styleMatch=styleRegex.exec(reactNativeCode);if(styleMatch){const stylesObject=eval(`(${styleMatch[1]})`);for(const[key,value]of Object.entries(stylesObject)){const cssClassName=key.replace(/([A-Z])/g,'-$1').toLowerCase();convertedCss+=`.${cssClassName} {\\n`;for(const[cssKey,cssValue]of Object.entries(value)){const cssProperty=cssKey.replace(/([A-Z])/g,'-$1').toLowerCase();convertedCss+=`  ${cssProperty}: ${cssValue};\\n`;}convertedCss+='}\\n\\n';}// Replace style={styles.someClass} with className=\"someClass\"\nconvertedCode=convertedCode.replace(/style={styles\\.(\\w+)}/g,(match,p1)=>{return`className=\"${p1}\"`;});}// Remove the entire StyleSheet creation\nconvertedCode=convertedCode.replace(/const styles = ;/g,'');// Update the state with the converted code and CSS\nsetReactJsCode(convertedCode);setCssCode(convertedCss);};return/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px',maxWidth:'600px',margin:'auto'},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"React Native to React.js Converter\"}),/*#__PURE__*/_jsx(\"textarea\",{rows:\"10\",cols:\"50\",value:reactNativeCode,onChange:e=>setReactNativeCode(e.target.value),placeholder:\"Paste your React Native code here\",style:{width:'100%',marginBottom:'10px'}}),/*#__PURE__*/_jsx(\"button\",{onClick:handleConvert,style:{padding:'10px 20px'},children:\"Convert to React.js\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Converted React.js Code:\"}),/*#__PURE__*/_jsx(\"pre\",{style:{backgroundColor:'#f0f0f0',padding:'10px',whiteSpace:'pre-wrap',wordBreak:'break-word'},children:reactJsCode}),/*#__PURE__*/_jsx(\"h3\",{children:\"Generated CSS:\"}),/*#__PURE__*/_jsx(\"pre\",{style:{backgroundColor:'#f0f0f0',padding:'10px',whiteSpace:'pre-wrap',wordBreak:'break-word'},children:cssCode})]});}export default App;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","App","reactNativeCode","setReactNativeCode","reactJsCode","setReactJsCode","cssCode","setCssCode","handleConvert","convertedCode","convertedCss","replace","includes","styleRegex","styleMatch","exec","stylesObject","eval","key","value","Object","entries","cssClassName","toLowerCase","cssKey","cssValue","cssProperty","match","p1","style","padding","maxWidth","margin","children","rows","cols","onChange","e","target","placeholder","width","marginBottom","onClick","backgroundColor","whiteSpace","wordBreak"],"sources":["/Users/pankajbhardwaj/Desktop/Projects/RnD/rntoreact/rntoreact/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\n\nfunction App() {\n  const [reactNativeCode, setReactNativeCode] = useState('');\n  const [reactJsCode, setReactJsCode] = useState('');\n  const [cssCode, setCssCode] = useState('');\n\n  const handleConvert = () => {\n    let convertedCode = reactNativeCode;\n    let convertedCss = '';\n    \n    convertedCode = convertedCode.replace(/import {[^}]+} from 'react-native';/g, '');\n    \n\n\n    // Ensure the import React statement is added once at the beginning\n    if (!convertedCode.includes(\"import React from 'react';\")) {\n      convertedCode = \"import React from 'react';\\n\" + convertedCode;\n    }\n\n    // Replace React Native components with their React.js equivalents\n    convertedCode = convertedCode\n      .replace(/View/g, 'div')\n      .replace(/Text/g, 'p')\n      .replace(/TouchableOpacity/g, 'button')\n      .replace(/StyleSheet.create\\({(.*?)}\\)/gs, '');\n\n    // Extract and convert the styles to CSS\n    const styleRegex = /const styles = StyleSheet.create\\(({[\\s\\S]*?})\\);/g;\n    const styleMatch = styleRegex.exec(reactNativeCode);\n\n    if (styleMatch) {\n      const stylesObject = eval(`(${styleMatch[1]})`);\n      for (const [key, value] of Object.entries(stylesObject)) {\n        const cssClassName = key.replace(/([A-Z])/g, '-$1').toLowerCase();\n        convertedCss += `.${cssClassName} {\\n`;\n        for (const [cssKey, cssValue] of Object.entries(value)) {\n          const cssProperty = cssKey.replace(/([A-Z])/g, '-$1').toLowerCase();\n          convertedCss += `  ${cssProperty}: ${cssValue};\\n`;\n        }\n        convertedCss += '}\\n\\n';\n      }\n\n       // Replace style={styles.someClass} with className=\"someClass\"\n       convertedCode = convertedCode.replace(/style={styles\\.(\\w+)}/g, (match, p1) => {\n        return `className=\"${p1}\"`;\n      });\n      \n    }\n\n    // Remove the entire StyleSheet creation\n    convertedCode = convertedCode.replace(/const styles = ;/g, '');\n\n    // Update the state with the converted code and CSS\n    setReactJsCode(convertedCode);\n    setCssCode(convertedCss);\n  };\n\n  return (\n    <div style={{ padding: '20px', maxWidth: '600px', margin: 'auto' }}>\n      <h2>React Native to React.js Converter</h2>\n      <textarea\n        rows=\"10\"\n        cols=\"50\"\n        value={reactNativeCode}\n        onChange={(e) => setReactNativeCode(e.target.value)}\n        placeholder=\"Paste your React Native code here\"\n        style={{ width: '100%', marginBottom: '10px' }}\n      />\n      <button onClick={handleConvert} style={{ padding: '10px 20px' }}>\n        Convert to React.js\n      </button>\n      <h3>Converted React.js Code:</h3>\n      <pre\n        style={{\n          backgroundColor: '#f0f0f0',\n          padding: '10px',\n          whiteSpace: 'pre-wrap',\n          wordBreak: 'break-word',\n        }}\n      >\n        {reactJsCode}\n      </pre>\n      <h3>Generated CSS:</h3>\n      <pre\n        style={{\n          backgroundColor: '#f0f0f0',\n          padding: '10px',\n          whiteSpace: 'pre-wrap',\n          wordBreak: 'break-word',\n        }}\n      >\n        {cssCode}\n      </pre>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}