{"ast":null,"code":"var _jsxFileName = \"/Users/pankajbhardwaj/Desktop/Projects/RnD/rntoreact/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [reactNativeCode, setReactNativeCode] = useState('');\n  const [reactJsCode, setReactJsCode] = useState('');\n  const handleConvert = () => {\n    // Placeholder for the conversion logic\n    let convertedCode = reactNativeCode;\n\n    // Example conversion logic: replace \"View\" with \"div\" and \"Text\" with \"span\"\n    convertedCode = convertedCode.replace(/View/g, 'div').replace(/Text/g, 'span');\n    setReactJsCode(convertedCode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      maxWidth: '600px',\n      margin: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"React Native to React.js Converter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: \"10\",\n      cols: \"50\",\n      value: reactNativeCode,\n      onChange: e => setReactNativeCode(e.target.value),\n      placeholder: \"Paste your React Native code here\",\n      style: {\n        width: '100%',\n        marginBottom: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleConvert,\n      style: {\n        padding: '10px 20px'\n      },\n      children: \"Convert to React.js\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Converted React.js Code:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      style: {\n        backgroundColor: '#f0f0f0',\n        padding: '10px',\n        whiteSpace: 'pre-wrap',\n        wordBreak: 'break-word'\n      },\n      children: reactJsCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 6\n  }, this);\n}\n\n/*\nExplanation:\nState Management:\n\nreactNativeCode: Holds the React Native code entered by the user.\nreactJsCode: Stores the converted React.js code.\nText Area:\n\nThis is where the user pastes their React Native code.\nButton:\n\nWhen pressed, the handleConvert function is triggered, which currently has placeholder logic for conversion.\nConversion Logic:\n\nFor demonstration, it converts View components to div and Text components to span. You'll need to expand this logic to handle more complex conversions.\nDisplaying the Converted Code:\n\nThe converted code is displayed in a pre tag to maintain formatting.\n\n*/\n_s(App, \"DahfIJwpUFIAgB9If29X1n2bGPI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","React","useState","jsxDEV","_jsxDEV","App","_s","reactNativeCode","setReactNativeCode","reactJsCode","setReactJsCode","handleConvert","convertedCode","replace","style","padding","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","rows","cols","value","onChange","e","target","placeholder","width","marginBottom","onClick","backgroundColor","whiteSpace","wordBreak","_c","$RefreshReg$"],"sources":["/Users/pankajbhardwaj/Desktop/Projects/RnD/rntoreact/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from 'react';\n\n\n\nfunction App() {\n\n  const [reactNativeCode, setReactNativeCode] = useState('');\n  const [reactJsCode, setReactJsCode] = useState('');\n\n  const handleConvert = () => {\n    // Placeholder for the conversion logic\n    let convertedCode = reactNativeCode;\n\n    // Example conversion logic: replace \"View\" with \"div\" and \"Text\" with \"span\"\n    convertedCode = convertedCode\n      .replace(/View/g, 'div')\n      .replace(/Text/g, 'span');\n\n    setReactJsCode(convertedCode);\n  };\n\n  return (\n     <div style={{ padding: '20px', maxWidth: '600px', margin: 'auto' }}>\n      <h2>React Native to React.js Converter</h2>\n      <textarea\n        rows=\"10\"\n        cols=\"50\"\n        value={reactNativeCode}\n        onChange={(e) => setReactNativeCode(e.target.value)}\n        placeholder=\"Paste your React Native code here\"\n        style={{ width: '100%', marginBottom: '10px' }}\n      />\n      <button onClick={handleConvert} style={{ padding: '10px 20px' }}>\n        Convert to React.js\n      </button>\n      <h3>Converted React.js Code:</h3>\n      <pre\n        style={{\n          backgroundColor: '#f0f0f0',\n          padding: '10px',\n          whiteSpace: 'pre-wrap',\n          wordBreak: 'break-word',\n        }}\n      >\n        {reactJsCode}\n      </pre>\n    </div>\n  );\n}\n\n/*\nExplanation:\nState Management:\n\nreactNativeCode: Holds the React Native code entered by the user.\nreactJsCode: Stores the converted React.js code.\nText Area:\n\nThis is where the user pastes their React Native code.\nButton:\n\nWhen pressed, the handleConvert function is triggered, which currently has placeholder logic for conversion.\nConversion Logic:\n\nFor demonstration, it converts View components to div and Text components to span. You'll need to expand this logic to handle more complex conversions.\nDisplaying the Converted Code:\n\nThe converted code is displayed in a pre tag to maintain formatting.\n\n*/\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIxC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMS,aAAa,GAAGA,CAAA,KAAM;IAC1B;IACA,IAAIC,aAAa,GAAGL,eAAe;;IAEnC;IACAK,aAAa,GAAGA,aAAa,CAC1BC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CACvBA,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC;IAE3BH,cAAc,CAACE,aAAa,CAAC;EAC/B,CAAC;EAED,oBACGR,OAAA;IAAKU,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,QAAQ,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAClEd,OAAA;MAAAc,QAAA,EAAI;IAAkC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3ClB,OAAA;MACEmB,IAAI,EAAC,IAAI;MACTC,IAAI,EAAC,IAAI;MACTC,KAAK,EAAElB,eAAgB;MACvBmB,QAAQ,EAAGC,CAAC,IAAKnB,kBAAkB,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACpDI,WAAW,EAAC,mCAAmC;MAC/Cf,KAAK,EAAE;QAAEgB,KAAK,EAAE,MAAM;QAAEC,YAAY,EAAE;MAAO;IAAE;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACFlB,OAAA;MAAQ4B,OAAO,EAAErB,aAAc;MAACG,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAY,CAAE;MAAAG,QAAA,EAAC;IAEjE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTlB,OAAA;MAAAc,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjClB,OAAA;MACEU,KAAK,EAAE;QACLmB,eAAe,EAAE,SAAS;QAC1BlB,OAAO,EAAE,MAAM;QACfmB,UAAU,EAAE,UAAU;QACtBC,SAAS,EAAE;MACb,CAAE;MAAAjB,QAAA,EAEDT;IAAW;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBAhB,EAAA,CA9CSD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AAkEZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}